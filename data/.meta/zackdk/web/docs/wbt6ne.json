{
  "id": 1338288,
  "slug": "wbt6ne",
  "title": "CSS之选择器权重",
  "book_id": 231593,
  "book": {
    "id": 231593,
    "type": "Book",
    "slug": "web",
    "name": "WEB",
    "user_id": 284138,
    "description": "前端知识点记录",
    "creator_id": 284138,
    "public": 1,
    "items_count": 58,
    "likes_count": 0,
    "watches_count": 3,
    "content_updated_at": "2023-02-02T09:09:21.426Z",
    "updated_at": "2023-02-02T09:09:21.000Z",
    "created_at": "2019-03-07T05:05:08.000Z",
    "namespace": "zackdk/web",
    "user": {
      "id": 284138,
      "type": "User",
      "login": "zackdk",
      "name": "行一度空山",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1551934932702-d412771d-8d33-4694-9186-a749a3b4e05b.jpeg",
      "books_count": 2,
      "public_books_count": 1,
      "followers_count": 5,
      "following_count": 0,
      "created_at": "2019-03-07T05:02:38.000Z",
      "updated_at": "2023-02-01T12:18:25.000Z",
      "_serializer": "v2.user"
    },
    "_serializer": "v2.book"
  },
  "user_id": 284138,
  "creator": {
    "id": 284138,
    "type": "User",
    "login": "zackdk",
    "name": "行一度空山",
    "description": null,
    "avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1551934932702-d412771d-8d33-4694-9186-a749a3b4e05b.jpeg",
    "books_count": 2,
    "public_books_count": 1,
    "followers_count": 5,
    "following_count": 0,
    "created_at": "2019-03-07T05:02:38.000Z",
    "updated_at": "2023-02-01T12:18:25.000Z",
    "_serializer": "v2.user"
  },
  "format": "lake",
  "body": "<a name=\"5dca4ecb\"></a>\n## 选择器的种类\n\n- !important;（覆盖所有样式）\n- 行内样式;\n- id选择器;\n- class,属性选择器（a[href]）和伪类选择器（a:hover）;\n- 标签选择器和伪元素选择器（:before）;\n\n除开important，从上到小优先级依次减小，也就是权重变低。\n<a name=\"2553b043\"></a>\n## 广为流传的计算权重的方法\n\n![u=347263432,198076944&fm=26&gp=0.jpg](https://cdn.nlark.com/yuque/0/2019/jpeg/284138/1551943926182-d3388d4c-9a7e-4e38-bfda-52fac8fd48b5.jpeg#align=left&display=inline&height=132&name=u%3D347263432%2C198076944%26fm%3D26%26gp%3D0.jpg&originHeight=132&originWidth=500&size=9121&status=done&width=500)\n\n如上图所示，根据选择器类型不同，给出了不同的权重值。\n\n- STYLE：1000\n- #ID：100\n- .CLASS 10\n- ELEMENT 1\n\n网上大多是文章把规则规定为：内联样式的权重值是1000，ID选择器的权重值是100，class选择器的权重值是10，标签选择器的权重值是1. 整条规则中的所有选择器权重值相加得到整个样式规则的权重值，数字越大权重值越高。\n\n在大多数情况下这种说法的确是正确的。举一个特殊的例子。\n\n```\ncss如下：\n\ndiv div div div div div div div div div div{ background-color: red; }\n\n.wrapper{ background-color: black; }\n\nhtml 结构 \n\n11个层级的div 最后一个div上有class=“wrapper”\n```\n\n按照上面的规则，11个div 就是 11_1 = 11，一个class 就是 1_10 = 10。11>10,所以背景色应该是**红色**才对。而实际上是**黑色**。\n\n<a name=\"dda1e72f\"></a>\n## 权重比较的方法\n\n\n\n如图所示，选择器的确划分为了四个层级，A,B,C,D，但并不是四个层级相加得总和然后再比较，而是根据权重从高到低，依次比较。\n\n<a name=\"507b9a36\"></a>\n#### 比较规则：\n\n```\n样式1 -> A = 样式2 -> A    //相等则比较下一层级\n\n样式1 -> B = 样式2 -> B    //相等则比较下一层级  \n\n样式1 -> C = 样式2 -> C    //相等则比较下一层级\n\n样式1 -> D = 样式2 -> D    //相等,无下一层级，则后定义的优先\n```\n\n<a name=\"2c6bbd5b\"></a>\n#### 重新比较权重：\n\n样式1： 0,0,0,11\n\n样式2： 0,0,10,0\n\n开始比较\n\n```\n样式1 -> A **=** 样式2 -> A    //相等则比较下一层级\n\n样式1 -> B **=** 样式2 -> B    //相等则比较下一层级  \n\n样式1 -> C **<** 样式2 -> C    //样式2大于样式1，运用样式2的值。\n```\n\n",
  "body_draft": "",
  "body_html": "<!doctype html><h2 id=\"5dca4ecb\">选择器的种类</h2><p><br /></p><ul><li>!important;（覆盖所有样式）</li></ul><ul><li>行内样式;</li></ul><ul><li>id选择器;</li></ul><ul><li>class,属性选择器（a[href]）和伪类选择器（a:hover）;</li></ul><ul><li>标签选择器和伪元素选择器（:before）;</li></ul><p><br /></p><p>除开important，从上到小优先级依次减小，也就是权重变低。</p><h2 id=\"2553b043\">广为流传的计算权重的方法</h2><p><br /></p><p><img alt=\"u=347263432,198076944&amp;fm=26&amp;gp=0.jpg\" src=\"https://cdn.nlark.com/yuque/0/2019/jpeg/284138/1551943926182-d3388d4c-9a7e-4e38-bfda-52fac8fd48b5.jpeg#align=left&amp;display=inline&amp;height=132&amp;name=u%3D347263432%2C198076944%26fm%3D26%26gp%3D0.jpg&amp;originHeight=132&amp;originWidth=500&amp;size=9121&amp;status=done&amp;width=500\" style=\"max-width: 600px; width: 500px;\" /></p><p><br /></p><p>如上图所示，根据选择器类型不同，给出了不同的权重值。</p><p><br /></p><ul><li>STYLE：1000</li></ul><ul><li>#ID：100</li></ul><ul><li>.CLASS 10</li></ul><ul><li>ELEMENT 1</li></ul><p><br /></p><p>网上大多是文章把规则规定为：内联样式的权重值是1000，ID选择器的权重值是100，class选择器的权重值是10，标签选择器的权重值是1. 整条规则中的所有选择器权重值相加得到整个样式规则的权重值，数字越大权重值越高。</p><p><br /></p><p>在大多数情况下这种说法的确是正确的。举一个特殊的例子。</p><p><br /></p><pre><code>css如下：\n\ndiv div div div div div div div div div div{ background-color: red; }\n\n.wrapper{ background-color: black; }\n\nhtml 结构 \n\n11个层级的div 最后一个div上有class=“wrapper”</code></pre><p><br /></p><p>按照上面的规则，11个div 就是 11<em>1 = 11，一个class 就是 1</em>10 = 10。11&gt;10,所以背景色应该是<strong>红色</strong>才对。而实际上是<strong>黑色</strong>。</p><p><br /></p><h2 id=\"dda1e72f\">权重比较的方法</h2><p><br /></p><p></p><p><br /></p><p>如图所示，选择器的确划分为了四个层级，A,B,C,D，但并不是四个层级相加得总和然后再比较，而是根据权重从高到低，依次比较。</p><p><br /></p><h4 id=\"507b9a36\">比较规则：</h4><p><br /></p><pre><code>样式1 -&gt; A = 样式2 -&gt; A    //相等则比较下一层级\n\n样式1 -&gt; B = 样式2 -&gt; B    //相等则比较下一层级  \n\n样式1 -&gt; C = 样式2 -&gt; C    //相等则比较下一层级\n\n样式1 -&gt; D = 样式2 -&gt; D    //相等,无下一层级，则后定义的优先</code></pre><p><br /></p><h4 id=\"2c6bbd5b\">重新比较权重：</h4><p><br /></p><p>样式1： 0,0,0,11</p><p><br /></p><p>样式2： 0,0,10,0</p><p><br /></p><p>开始比较</p><p><br /></p><pre><code>样式1 -&gt; A **=** 样式2 -&gt; A    //相等则比较下一层级\n\n样式1 -&gt; B **=** 样式2 -&gt; B    //相等则比较下一层级  \n\n样式1 -&gt; C **&lt;** 样式2 -&gt; C    //样式2大于样式1，运用样式2的值。</code></pre><p><br /></p>",
  "body_lake": "<!doctype lake><h2 id=\"5dca4ecb\">选择器的种类</h2><p><br /></p><ul><li>!important;（覆盖所有样式）</li></ul><ul><li>行内样式;</li></ul><ul><li>id选择器;</li></ul><ul><li>class,属性选择器（a[href]）和伪类选择器（a:hover）;</li></ul><ul><li>标签选择器和伪元素选择器（:before）;</li></ul><p><br /></p><p>除开important，从上到小优先级依次减小，也就是权重变低。</p><h2 id=\"2553b043\">广为流传的计算权重的方法</h2><p><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fjpeg%2F284138%2F1551943926182-d3388d4c-9a7e-4e38-bfda-52fac8fd48b5.jpeg%22%2C%22originWidth%22%3A500%2C%22originHeight%22%3A132%2C%22name%22%3A%22u%3D347263432%2C198076944%26fm%3D26%26gp%3D0.jpg%22%2C%22size%22%3A9121%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A500%2C%22height%22%3A132%7D\"></card></p><p><br /></p><p>如上图所示，根据选择器类型不同，给出了不同的权重值。</p><p><br /></p><ul><li>STYLE：1000</li></ul><ul><li>#ID：100</li></ul><ul><li>.CLASS 10</li></ul><ul><li>ELEMENT 1</li></ul><p><br /></p><p>网上大多是文章把规则规定为：内联样式的权重值是1000，ID选择器的权重值是100，class选择器的权重值是10，标签选择器的权重值是1. 整条规则中的所有选择器权重值相加得到整个样式规则的权重值，数字越大权重值越高。</p><p><br /></p><p>在大多数情况下这种说法的确是正确的。举一个特殊的例子。</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22code%22%3A%22css%E5%A6%82%E4%B8%8B%EF%BC%9A%5Cn%5Cndiv%20div%20div%20div%20div%20div%20div%20div%20div%20div%20div%7B%20background-color%3A%20red%3B%20%7D%5Cn%5Cn.wrapper%7B%20background-color%3A%20black%3B%20%7D%5Cn%5Cnhtml%20%E7%BB%93%E6%9E%84%20%5Cn%5Cn11%E4%B8%AA%E5%B1%82%E7%BA%A7%E7%9A%84div%20%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AAdiv%E4%B8%8A%E6%9C%89class%3D%E2%80%9Cwrapper%E2%80%9D%22%7D\"></card><p><br /></p><p>按照上面的规则，11个div 就是 11<em>1 = 11，一个class 就是 1</em>10 = 10。11&gt;10,所以背景色应该是<strong>红色</strong>才对。而实际上是<strong>黑色</strong>。</p><p><br /></p><h2 id=\"dda1e72f\">权重比较的方法</h2><p><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22%22%2C%22alt%22%3A%22alt%22%2C%22status%22%3A%22error%22%2C%22percent%22%3A0%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22display%22%3A%22inline%22%2C%22message%22%3A%22%E5%9B%BE%E7%89%87%E4%B8%8D%E6%94%AF%E6%8C%81%E6%8B%B7%E8%B4%9D%E5%A4%8D%E5%88%B6%EF%BC%8C%E8%AF%B7%E5%8D%95%E7%8B%AC%E5%A4%8D%E5%88%B6%E4%B8%8A%E4%BC%A0%22%2C%22size%22%3A0%7D\"></card><cursor /></p><p><br /></p><p>如图所示，选择器的确划分为了四个层级，A,B,C,D，但并不是四个层级相加得总和然后再比较，而是根据权重从高到低，依次比较。</p><p><br /></p><h4 id=\"507b9a36\">比较规则：</h4><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22code%22%3A%22%E6%A0%B7%E5%BC%8F1%20-%3E%20A%20%3D%20%E6%A0%B7%E5%BC%8F2%20-%3E%20A%20%20%20%20%2F%2F%E7%9B%B8%E7%AD%89%E5%88%99%E6%AF%94%E8%BE%83%E4%B8%8B%E4%B8%80%E5%B1%82%E7%BA%A7%5Cn%5Cn%E6%A0%B7%E5%BC%8F1%20-%3E%20B%20%3D%20%E6%A0%B7%E5%BC%8F2%20-%3E%20B%20%20%20%20%2F%2F%E7%9B%B8%E7%AD%89%E5%88%99%E6%AF%94%E8%BE%83%E4%B8%8B%E4%B8%80%E5%B1%82%E7%BA%A7%20%20%5Cn%5Cn%E6%A0%B7%E5%BC%8F1%20-%3E%20C%20%3D%20%E6%A0%B7%E5%BC%8F2%20-%3E%20C%20%20%20%20%2F%2F%E7%9B%B8%E7%AD%89%E5%88%99%E6%AF%94%E8%BE%83%E4%B8%8B%E4%B8%80%E5%B1%82%E7%BA%A7%5Cn%5Cn%E6%A0%B7%E5%BC%8F1%20-%3E%20D%20%3D%20%E6%A0%B7%E5%BC%8F2%20-%3E%20D%20%20%20%20%2F%2F%E7%9B%B8%E7%AD%89%2C%E6%97%A0%E4%B8%8B%E4%B8%80%E5%B1%82%E7%BA%A7%EF%BC%8C%E5%88%99%E5%90%8E%E5%AE%9A%E4%B9%89%E7%9A%84%E4%BC%98%E5%85%88%22%7D\"></card><p><br /></p><h4 id=\"2c6bbd5b\">重新比较权重：</h4><p><br /></p><p>样式1： 0,0,0,11</p><p><br /></p><p>样式2： 0,0,10,0</p><p><br /></p><p>开始比较</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22code%22%3A%22%E6%A0%B7%E5%BC%8F1%20-%3E%20A%20**%3D**%20%E6%A0%B7%E5%BC%8F2%20-%3E%20A%20%20%20%20%2F%2F%E7%9B%B8%E7%AD%89%E5%88%99%E6%AF%94%E8%BE%83%E4%B8%8B%E4%B8%80%E5%B1%82%E7%BA%A7%5Cn%5Cn%E6%A0%B7%E5%BC%8F1%20-%3E%20B%20**%3D**%20%E6%A0%B7%E5%BC%8F2%20-%3E%20B%20%20%20%20%2F%2F%E7%9B%B8%E7%AD%89%E5%88%99%E6%AF%94%E8%BE%83%E4%B8%8B%E4%B8%80%E5%B1%82%E7%BA%A7%20%20%5Cn%5Cn%E6%A0%B7%E5%BC%8F1%20-%3E%20C%20**%3C**%20%E6%A0%B7%E5%BC%8F2%20-%3E%20C%20%20%20%20%2F%2F%E6%A0%B7%E5%BC%8F2%E5%A4%A7%E4%BA%8E%E6%A0%B7%E5%BC%8F1%EF%BC%8C%E8%BF%90%E7%94%A8%E6%A0%B7%E5%BC%8F2%E7%9A%84%E5%80%BC%E3%80%82%22%7D\"></card><p><br /></p>",
  "body_draft_lake": "",
  "public": 1,
  "status": 0,
  "view_status": 0,
  "read_status": 1,
  "likes_count": 0,
  "comments_count": 0,
  "content_updated_at": "2021-01-21T12:02:37.000Z",
  "deleted_at": null,
  "created_at": "2019-03-07T07:28:35.000Z",
  "updated_at": "2023-02-02T09:07:58.000Z",
  "published_at": "2019-03-07T07:34:40.000Z",
  "first_published_at": "2019-03-07T07:34:40.000Z",
  "word_count": 555,
  "cover": null,
  "description": "选择器的种类!important;（覆盖所有样式）行内样式;id选择器;class,属性选择器（a[href]）和伪类选择器（a:hover）;标签选择器和伪元素选择器（:before）;除开important，从上到小优先级依次减小，也就是权重变低。广为流传的计算权重的方法如上图所示，根据选...",
  "custom_description": null,
  "hits": 15,
  "_serializer": "v2.doc_detail"
}