{
  "id": 4604379,
  "slug": "pb4bb7",
  "title": "HTTP强缓存 协商缓存",
  "book_id": 231593,
  "book": {
    "id": 231593,
    "type": "Book",
    "slug": "web",
    "name": "WEB",
    "user_id": 284138,
    "description": "前端知识点记录",
    "creator_id": 284138,
    "public": 1,
    "items_count": 58,
    "likes_count": 0,
    "watches_count": 3,
    "content_updated_at": "2023-02-02T09:09:21.426Z",
    "updated_at": "2023-02-02T09:09:21.000Z",
    "created_at": "2019-03-07T05:05:08.000Z",
    "namespace": "zackdk/web",
    "user": {
      "id": 284138,
      "type": "User",
      "login": "zackdk",
      "name": "行一度空山",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1551934932702-d412771d-8d33-4694-9186-a749a3b4e05b.jpeg",
      "books_count": 2,
      "public_books_count": 1,
      "followers_count": 5,
      "following_count": 0,
      "created_at": "2019-03-07T05:02:38.000Z",
      "updated_at": "2023-02-01T12:18:25.000Z",
      "_serializer": "v2.user"
    },
    "_serializer": "v2.book"
  },
  "user_id": 284138,
  "creator": {
    "id": 284138,
    "type": "User",
    "login": "zackdk",
    "name": "行一度空山",
    "description": null,
    "avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1551934932702-d412771d-8d33-4694-9186-a749a3b4e05b.jpeg",
    "books_count": 2,
    "public_books_count": 1,
    "followers_count": 5,
    "following_count": 0,
    "created_at": "2019-03-07T05:02:38.000Z",
    "updated_at": "2023-02-01T12:18:25.000Z",
    "_serializer": "v2.user"
  },
  "format": "lake",
  "body": "\n缓存，首先肯定是在第一次访问之后的事。\n\n第一次访问网页，要显示完整的网页需要加载很多 诸如css/js/html/图片等资源文件。每一个文件都需要经过你的电脑然后各种各样的中间服务器到达最后的资源服务器，不用说也知道这是需要花费一定时间的，加上资源文件这么多，所以第一次打开网页，你需要等一段时间才能看到完整的网页。<br />相比之下，第二次访问就会好很多，这正是由于浏览器做了缓存的缘故，浏览器把所有的资源都缓存下来了，当你再次请求的时候，就不会再去资源服务器上下载了，而是直接从你本地的缓存里拿，那当然快很多了。\n\n从实际上来说，这些资源文件，比如图片，在很长一段时间内，都不会变动，应该都是同一个文件。如果每次请求都重新下载一次。不仅增加服务器压力（网页中这些资源文件请求频率是很高的），还浪费用户流量。<br />但这些资源文件，毕竟不是永远不变的，一旦发生改变，就应该马上使用新的，这样用户才能看到最新的。所以我们需要某种机制来确认，当前缓存的资源是否与服务器的资源是一致的。\n\n\n言归正传。上面一大堆我只是想说，缓存真的是很有必要的。\n\n缓存，是靠http头部字段，来控制的。一般分了强缓存和协商缓存。涉及到的字段有：\n\n| 强缓存 | [**Expires**](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Expires) | [**Cache-Control**](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Cache-Control) |\n| --- | --- | --- |\n| 协商缓存 | [**Last-modified/If-Modified-Since**](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Last-Modified) | [**Etag/If-None-Match**](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/ETag)<br />** |\n\n\n<a name=\"Ao96G\"></a>\n## 强缓存\n\n强缓存最大的特点是：如果缓存判定没有过期，则不会请求服务器，直接从缓存拿数据。\n\n<a name=\"tOPUe\"></a>\n### Expires\n\n\n和单词字面意思一样，过期时间。后面跟的是一个时间字符串，过了这个时间，代表缓存过期了。需要走下面的步骤（协商缓存，或者重新获取资源）。但有明显的问题，客户端和服务器时间存在不一致，导致判定过期或者不过期。\n\n```http\nExpires: Wed, 21 Oct 2015 07:28:00 GMT\n```\n\n<a name=\"AkwiO\"></a>\n### Cache-Control\n\n首先第一点，cache-control的优先级比expires高；<br />然后和expires不同，这个后面可以跟多个指令。常见的有代表，\n\n是否可缓存？ public，private，no-cache，nostore\n\n| 指令名字 | 意义 |\n| --- | --- |\n| public | 可以被任意对象缓存，包括代理服务器 |\n| private | 只能被客户端缓存，代理服务器之类的不能缓存。 |\n| no-cache | 客户端使用缓存之前，必须把请求发到服务器，进行验证。（走协商缓存?） |\n| no-store | 不允许任何对象对请求或者响应进行缓存。 |\n\n\n到期时间的相关。max-age最常用。其它请参考MDN。<br />**max-age=<seconds>**<br />max-age后面跟秒数，代表客户端拿到这个请求，多少秒后会过期。这个就避免了expires的客户端服务器时间不一致的问题了。\n\n```http\nCache-Control: no-store//关闭缓存\nCache-Control:public, max-age=31536000//对于长久不变的资源文件，缓存时间很长。\n\nCache-Control: no-cache//强制对缓存进行有效性检验（协商缓存？）\nCache-Control: max-age=0//代表收到请求资源就已过期，需要验证缓存有效性（协商缓存？）。\n```\n\n<a name=\"Ph6sg\"></a>\n## 协商缓存\n\n当强缓存判断过期了，或者cache-control设置为no-cache时，需要去验证资源是否有效。这时候就走协商缓存了。\n\n协商缓存，会像服务器发请求，然后服务器判断资源是否还有效，有效就返回304状态码，带上最新的头信息。没有body内容。如果无效，就正常返回新的资源内容。\n\n协商缓存如其名，需要客户端和服务器协商。协商是靠[Etag](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/ETag)和[Last-modified](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Last-Modified)来进行的。\n\n<a name=\"K5qfl\"></a>\n### Last-modified/If-Modified-Since\n\n指令后面跟的值都是GMT的标准时间字符串。\n\n```http\n//出现在响应头中\nLast-Modified: Wed, 21 Oct 2015 07:28:00 GMT \n\n//出现在请求头中\nIf-Modified-Since: Wed, 21 Oct 2015 07:28:00 GMT\n```\n\n其中last-modified是响应头字段，即客户端像服务器请求某个资源，服务器响应回来的头字段里会包含该字段。标记此文件在服务期端最后被修改的时间<br />然后if-modified-since是请求头字段，即需要验证资源有效的时候，像服务器发送的请求会带这个字段，值为响应头的last-modified的值。\n\n这样一来一去，服务器收到验证请求的时候，拿这个if-modified-since的值去对比资源修改的时间，如果资源在那之后有过修改，就返回新的资源，否则就返回304状态码。浏览器则继续使用当前缓存。\n\n该指令只能精确到秒。所有有了后面精确度更高的Etag的出现。\n\n<a name=\"F3ukX\"></a>\n### Etag/If-None-Match\n\netag原理和last-modified差不多。但etag优先级更高。<br />但etag的值一般使用文件内容或者文件最后修改日期的hash值。代表该资源的唯一标识符，一旦文件改变，该标识就会改变。\n\n```http\n//出现在响应头中\nETag: \"33a64df551425fcc55e4d42a148795d9f25f89d4\n//出现在请求头中\nIf-Match: \"33a64df551425fcc55e4d42a148795d9f25f89d4\"\n```\n\n其中ETag是响应头字段，即客户端像服务器请求某个资源，服务器响应回来的头字段里会包含该字段。代表此文件的唯一标识。<br />然后if-none-match是请求头字段，即需要验证资源有效的时候，像服务器发送的请求会带这个字段，值为响应头的ETag的值。t\n\n这样一来一去，服务器收到验证请求的时候，拿这个if-none-match的值去对比服务器上文件的etag值，如果不一致，就返回新的资源，否则就返回304状态码。浏览器则继续使用当前缓存。\n\n\n<a name=\"bbvAy\"></a>\n## 缓存的流程\n\n还是看图片比较清楚，虽然我是偷的。下面的图来自[链接](https://www.cnblogs.com/leftJS/p/11082777.html)\n\n<a name=\"y9taF\"></a>\n### 第一次请求资源的时候\n![](https://cdn.nlark.com/yuque/0/2020/png/284138/1582640123545-d65336fa-0135-44b8-842a-951a205159b2.png#align=left&display=inline&height=369&originHeight=369&originWidth=411&size=0&status=done&style=none&width=411)\n\n\n<a name=\"gooAU\"></a>\n### 后续请求资源的时候\n\n![](https://cdn.nlark.com/yuque/0/2020/png/284138/1582640112044-a2da9ec8-099d-4169-b929-e15b2d5de851.png#align=left&display=inline&height=528&originHeight=528&originWidth=554&size=0&status=done&style=none&width=554)\n\n<a name=\"MQYCi\"></a>\n## 缓存实际中的使用场景\n\n由于现在基本上没折腾过这些，所以我也木知啊。<br />感觉这个说的还不错，可以参考参考。<br />[大公司里怎样开发和部署前端代码？](https://www.zhihu.com/question/20790576)\n\n\n<a name=\"91Zil\"></a>\n## 参考\n\n1. [200（强缓存）和304（协商缓存）的区别](https://www.cnblogs.com/leftJS/p/11082777.html)\n2. [MDN headers相关章节](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers)\n\n",
  "body_draft": "",
  "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-traditional\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B0%2C1%5D%2C%5B0%2C1%5D%5D%2C%22active%22%3Atrue%7D\"><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"9e56165f09cb787a30aab0898bb35768_p_1\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">缓存，首先肯定是在第一次访问之后的事。</p><p data-lake-id=\"2b2b3e7dc122d1502f582c0c8b7958d8_p_2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"f37fe8e0480d31c74d40da5952af2aaa_p_3\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">第一次访问网页，要显示完整的网页需要加载很多 诸如css/js/html/图片等资源文件。每一个文件都需要经过你的电脑然后各种各样的中间服务器到达最后的资源服务器，不用说也知道这是需要花费一定时间的，加上资源文件这么多，所以第一次打开网页，你需要等一段时间才能看到完整的网页。</p><p data-lake-id=\"00b6539a5208e9e1d2a075b1c6eabc05_p_4\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">相比之下，第二次访问就会好很多，这正是由于浏览器做了缓存的缘故，浏览器把所有的资源都缓存下来了，当你再次请求的时候，就不会再去资源服务器上下载了，而是直接从你本地的缓存里拿，那当然快很多了。</p><p data-lake-id=\"7467903a77e4c43e92d4f196903d0bbe_p_5\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"6e44bf9e929b3a24f491ee4f06e545f2_p_6\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">从实际上来说，这些资源文件，比如图片，在很长一段时间内，都不会变动，应该都是同一个文件。如果每次请求都重新下载一次。不仅增加服务器压力（网页中这些资源文件请求频率是很高的），还浪费用户流量。</p><p data-lake-id=\"ebd46c3420e347ee239c15b983e1d60e_p_7\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">但这些资源文件，毕竟不是永远不变的，一旦发生改变，就应该马上使用新的，这样用户才能看到最新的。所以我们需要某种机制来确认，当前缓存的资源是否与服务器的资源是一致的。</p><p data-lake-id=\"92c8228235b93f7cc9ced6ac90fca3a6_p_8\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"eadc4ec477465f1f239730d987d394b1_p_9\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"c2f34bc2394f6c1cbb10e3ef5bf5f2b4_p_10\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">言归正传。上面一大堆我只是想说，缓存真的是很有必要的。</p><p data-lake-id=\"828bea0262f636b25c97fbef525aed20_p_11\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"6f6771fad68d0217299f6dae9ae6f679_p_12\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">缓存，是靠http头部字段，来控制的。一般分了强缓存和协商缓存。涉及到的字段有：</p><p data-lake-id=\"2369fafe89fae403079018df6f36b51b_p_13\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"table\" id=\"JV63z\"><table class=\"lake-table\" style=\"width: 720px; outline: none; border-collapse: collapse; border: 1px solid rgb(217, 217, 217);\"><colgroup><col width=\"240\" span=\"1\"><col width=\"240\" span=\"1\"><col width=\"240\" span=\"1\"></colgroup><tbody><tr style=\"height: 33px;\"><td style=\"min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"c79857194462662866cfac0f08ec10e5\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">强缓存</p></td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"0f1a34e18fec1193c98546380cf4f57a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Expires\" target=\"_blank\"><strong>Expires</strong></a></p></td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"851b3ef944f476d0783cb1f73024f3c9\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Cache-Control\" target=\"_blank\"><strong>Cache-Control</strong></a></p></td></tr><tr style=\"height: 33px;\"><td style=\"min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"5d64f7b500b2e49fbb3a5459b48527fd\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">协商缓存</p></td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"f19cf3642ecd514d1c037c07c68843fe\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Last-Modified\" target=\"_blank\"><strong><span>Last-modified/If-Modified-Since</span></strong></a></p></td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"ac1764d180ccd2c71fcac571b601165f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/ETag\" target=\"_blank\"><strong>Etag/If-None-Match</strong></a></p><p data-lake-id=\"0ce9eb95dc7e72785368e1d573577e94\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><strong><br></strong></p></td></tr></tbody></table></div><p data-lake-id=\"7cf79ceeaaf91ef14264b4c55c1c8c1d_p_14\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 id=\"Ao96G\" data-lake-id=\"90e96949d45a6079c82f7fa099b54e0e_h2_0\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">强缓存</h2><p data-lake-id=\"c53070088aadb43ef468f61fca8ca22a_p_15\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"83ac857d8c09d4991a2aea3568b98691_p_16\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">强缓存最大的特点是：如果缓存判定没有过期，则<span style=\"color: #F5222D;\">不会请求服务器</span>，直接从缓存拿数据。</p><p data-lake-id=\"c5eaf555cee01ec836fc749258c6179d_p_17\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 id=\"tOPUe\" data-lake-id=\"c616b25a868555cb7a22fd2629483392_h3_0\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\"><span style=\"color: #000000;\"><span>Expires</span></span></h3><p data-lake-id=\"3f8949dd5527f0c9624c3fd3faefb76f_p_18\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #000000;\"><span><br></span></span></p><p data-lake-id=\"5b9e820fb8295fbe21de30d7bef33f8d_p_19\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #000000;\"><span>和单词字面意思一样，过期时间。后面跟的是一个时间字符串，过了这个时间，代表缓存过期了。需要走下面的步骤（协商缓存，或者重新获取资源）。但有明显的问题，客户端和服务器时间存在不一致，导致判定过期或者不过期。</span></span></p><p data-lake-id=\"db841a6e995b001085603629a3ace379_p_20\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #000000;\"><span><br></span></span></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"WX71R\" data-language=\"http\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-error\" style=\"color: rgb(255, 0, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Expires: Wed, 21 Oct 2015 07:28:00 GMT</span></span></span></pre></div></div></div><p data-lake-id=\"54d418504a63791b75a5f497078fa24a_p_21\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 id=\"AkwiO\" data-lake-id=\"ea77ac515d61789452b843d48cf672eb_h3_1\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">Cache-Control</h3><p data-lake-id=\"37928cd1f32681ee4810a9ab9d3c1104_p_22\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"cf11976076bcd232112f411a80f6c2f7_p_23\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">首先第一点，cache-control的优先级比expires高；</p><p data-lake-id=\"9d5b566e1d35e7e5ddf7e77231b93a7c_p_24\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">然后和expires不同，这个后面可以跟多个指令。常见的有代表，</p><p data-lake-id=\"3afe72986fc83f6913935faccbcf69b2_p_25\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"4c18de864d8feec493e5b1837e857fcc_p_26\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">是否可缓存？ public，private，no-cache，nostore</p><p data-lake-id=\"4cc44302cfe9be1836a49b383f7e914f_p_27\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"table\" id=\"c6HEK\"><table class=\"lake-table\" style=\"width: 480px; outline: none; border-collapse: collapse; border: 1px solid rgb(217, 217, 217);\"><colgroup><col width=\"240\" span=\"1\"><col width=\"240\" span=\"1\"></colgroup><tbody><tr style=\"height: 33px;\"><td style=\"min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"09565897fb424a554f1ade81b458d219\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">指令名字</p></td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"78f9ec95f51530fb2f6fc66a09e6fc45\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">意义</p></td></tr><tr style=\"height: 33px;\"><td style=\"min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"bf05598668933b574ce68d273aa727a8\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span>public</span></p></td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"793e3f8f4602c4d982809967200ac4b5\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">可以被任意对象缓存，包括代理服务器</p></td></tr><tr style=\"height: 33px;\"><td style=\"min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"55ce5745b0c35f87aa23e18b81657877\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span>private</span></p></td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"a17b92c474d657c1f1d68275f308f918\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">只能被客户端缓存，代理服务器之类的不能缓存。</p></td></tr><tr style=\"height: 33px;\"><td colspan=\"1\" style=\"vertical-align: top; background-color: rgb(255, 255, 255); color: rgb(38, 38, 38); min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"e8d2d740e8f5f902ea5b4773cbb2729f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span>no-cache</span></p></td><td colspan=\"1\" style=\"vertical-align: top; background-color: rgb(255, 255, 255); color: rgb(38, 38, 38); min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"a75378ed6714b8a6920db1f954b49219\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">客户端使用缓存之前，必须把请求发到服务器，进行验证。（走协商缓存?）</p></td></tr><tr style=\"height: 33px;\"><td colspan=\"1\" style=\"vertical-align: top; background-color: rgb(255, 255, 255); color: rgb(38, 38, 38); min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"edd03dc7202f6060b105fb978d18d997\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span>no-store</span></p></td><td colspan=\"1\" style=\"vertical-align: top; background-color: rgb(255, 255, 255); color: rgb(38, 38, 38); min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"b83bb8f3e3f0330cfc96f354048983db\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">不允许任何对象对请求或者响应进行缓存。</p></td></tr></tbody></table></div><p data-lake-id=\"d17d837b16c49a0e5c21edc18722e410_p_28\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"d88e4a12a4ed44f8657a361c35a3a870_p_29\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">到期时间的相关。max-age最常用。其它请参考MDN。</p><p data-lake-id=\"5fd458287805671513520d6e641d42d4_p_30\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><strong>max-age=&lt;seconds&gt;</strong></p><p data-lake-id=\"d41c873c84a6a727b3cac57e9790cf94_p_31\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">max-age后面跟秒数，代表客户端拿到这个请求，多少秒后会过期。这个就避免了expires的客户端服务器时间不一致的问题了。</p><p data-lake-id=\"bb3e20f1faeaf6bf9497bffd7f381295_p_32\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"nvlGm\" data-language=\"http\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-error\" style=\"color: rgb(255, 0, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Cache-Control: no-store//关闭缓存</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Cache-Control:</span><span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">public, max-age=31536000//对于长久不变的资源文件，缓存时间很长。</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Cache-Control: no-cache//强制对缓存进行有效性检验（协商缓存？）\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Cache-Control: max-age=0//代表收到请求资源就已过期，需要验证缓存有效性（协商缓存？）。</span></span></pre></div></div></div><p data-lake-id=\"73b74e66f7d869f94eb34b57d63eae3f_p_33\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 id=\"Ph6sg\" data-lake-id=\"d6e157313d3edef77d278e72864659c1_h2_1\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">协商缓存</h2><p data-lake-id=\"39abba9494ef6da94608fbd0e487aa60_p_34\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"b2b6e3a20468c26978009ef0324b5995_p_35\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">当强缓存判断过期了，或者cache-control设置为no-cache时，需要去验证资源是否有效。这时候就走协商缓存了。</p><p data-lake-id=\"6f8f966688575a1f666bafa122494f73_p_36\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"2439e96121b9d5fbf947554cfeb04750_p_37\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">协商缓存，会像服务器发请求，然后服务器判断资源是否还有效，有效就返回304状态码，带上最新的头信息。没有body内容。如果无效，就正常返回新的资源内容。</p><p data-lake-id=\"82f45866a429f6224b2e92c65bfda254_p_38\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"c6165af92210d0987bf3c7a054c97331_p_39\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">协商缓存如其名，需要客户端和服务器协商。协商是靠<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/ETag\" target=\"_blank\">Etag</a>和<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Last-Modified\" target=\"_blank\">Last-modified</a>来进行的。</p><p data-lake-id=\"17b412f9fc3ec51ada5f566f0d09108c_p_40\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 id=\"K5qfl\" data-lake-id=\"4fe29d5a3b6762026a5540141875324a_h3_2\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">Last-modified/If-Modified-Since</h3><p data-lake-id=\"d9d31f80b21bee6005ee4bb0be1d9a6b_p_41\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"b00e8f732627f270cecdf6a515e3a205_p_42\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">指令后面跟的值都是GMT的标准时间字符串。</p><p data-lake-id=\"4930f2b57b08d977b4a7a79433f23490_p_43\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"Cwu6u\" data-language=\"http\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-error\" style=\"color: rgb(255, 0, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">//出现在响应头中</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Last-Modified:</span><span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"> Wed, 21 Oct 2015 07:28:00 GMT </span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">//出现在请求头中\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">If-Modified-Since: Wed, 21 Oct 2015 07:28:00 GMT</span></span></pre></div></div></div><p data-lake-id=\"157b805d005afe38c7c2d5198b31ee6e_p_44\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"5db676cda3beb3ff1d3a2851aa78f72b_p_45\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">其中last-modified是响应头字段，即客户端像服务器请求某个资源，服务器响应回来的头字段里会包含该字段。<span style=\"color: #333333;\">标记此文件在服务期端最后被修改的时间</span></p><p data-lake-id=\"fbd61c94f3a6d54dfc7518c0d1e90a54_p_46\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">然后if-modified-since是请求头字段，即需要验证资源有效的时候，像服务器发送的请求会带这个字段，值为响应头的last-modified的值。</p><p data-lake-id=\"478231c71c811ff5f728eef1ada97581_p_47\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"77b953137b68f0b50907c2f2a473ad91_p_48\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这样一来一去，服务器收到验证请求的时候，拿这个if-modified-since的值去对比资源修改的时间，如果资源在那之后有过修改，就返回新的资源，否则就返回304状态码。浏览器则继续使用当前缓存。</p><p data-lake-id=\"233f53790c0b9d757f931748dd4d9e1e_p_49\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"22e9a5e0d83bc1ccd5d16babea30aa42_p_50\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">该指令只能精确到秒。所有有了后面精确度更高的Etag的出现。</p><p data-lake-id=\"d3ff43f9faa22377838e1e2c0834a861_p_51\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 id=\"F3ukX\" data-lake-id=\"de83fc44e5b24d65eaae1dd1b3abfe8e_h3_3\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">Etag/If-None-Match</h3><p data-lake-id=\"bc2359f7bb1e32241fa27f528e60a125_p_52\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"d47eeb435ac3ccf58f3c7eb7d4fcac8c_p_53\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">etag原理和last-modified差不多。但etag优先级更高。</p><p data-lake-id=\"a597f88600c34bdfa4e7a80426a30587_p_54\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">但etag的值一般使用文件内容或者文件最后修改日期的hash值。代表该资源的唯一标识符，一旦文件改变，该标识就会改变。</p><p data-lake-id=\"7188e3d4590c731c34019643bbb3ba96_p_55\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"Udelb\" data-language=\"http\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-error\" style=\"color: rgb(255, 0, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">//出现在响应头中</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ETag:</span><span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"> \"33a64df551425fcc55e4d42a148795d9f25f89d4</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-error\" style=\"color: rgb(255, 0, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">//出现在请求头中</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">If-Match:</span><span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"> \"33a64df551425fcc55e4d42a148795d9f25f89d4\"</span></span></span></pre></div></div></div><p data-lake-id=\"a6e7204180aba568d27cc7b95d0717fd_p_56\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"66484370daf0f556711d6bf0e0492af5_p_57\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">其中ETag是响应头字段，即客户端像服务器请求某个资源，服务器响应回来的头字段里会包含该字段。<span style=\"color: #333333;\">代表此文件的唯一标识。</span></p><p data-lake-id=\"5b98820f2b99867120b65c65b306037f_p_58\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">然后if-none-match是请求头字段，即需要验证资源有效的时候，像服务器发送的请求会带这个字段，值为响应头的<span>ETag</span>的值。t</p><p data-lake-id=\"1b325e2e939e9ae8679222558eaaceb6_p_59\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"6c305a5438cffdc97e16f9a4bcde3238_p_60\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这样一来一去，服务器收到验证请求的时候，拿这个<span>if-none-match</span>的值去对比服务器上文件的etag值，如果不一致，就返回新的资源，否则就返回304状态码。浏览器则继续使用当前缓存。</p><p data-lake-id=\"d89d8c6a729313c0d25f9b1742c0d590_p_61\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"9b034733f43578c770243b15c945bc07_p_62\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 id=\"bbvAy\" data-lake-id=\"e672f0cd3c3a0567663818da0f10922f_h2_2\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">缓存的流程</h2><p data-lake-id=\"87e34965e50e2c8e31ce44a85667e8dd_p_63\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"8f4760e916ba660eda084321f6a27c48_p_64\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">还是看图片比较清楚，虽然我是偷的。下面的图来自<a target=\"_blank\" href=\"https://www.cnblogs.com/leftJS/p/11082777.html\">链接</a></p><p data-lake-id=\"2a81d6eed31dfd1dc3c193bbdb75c1a1_p_65\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 id=\"y9taF\" data-lake-id=\"f2184e1e1c32a675a2a0e5007864f454_h3_4\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">第一次请求资源的时候</h3><p data-lake-id=\"0ec862102656d92d4a7e822007c68786_p_66\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/284138/1582640123545-d65336fa-0135-44b8-842a-951a205159b2.png\" data-raw-src=\"\" class=\"image lake-drag-image\" alt=\"image\" title=\"image\" data-height=\"369px\" style=\"visibility: visible; width: 411px;\"></span></p><p data-lake-id=\"152302cc03cd3433e252fd8fbe4bade7_p_67\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"f67c084ec5a7dd840c4c56ee24cc368e_p_68\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 id=\"gooAU\" data-lake-id=\"49823dcd81511eec73adf7eb9e9d1a81_h3_5\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">后续请求资源的时候</h3><p data-lake-id=\"956e0d4312e941b77cd57ec35c294aff_p_69\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"d3c2ce4cc534ea43d446be0c42d5c011_p_70\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/284138/1582640112044-a2da9ec8-099d-4169-b929-e15b2d5de851.png\" data-raw-src=\"\" class=\"image lake-drag-image\" alt=\"image\" title=\"image\" data-height=\"528px\" style=\"visibility: visible; width: 554px;\"></span></p><p data-lake-id=\"b7f5c253c3fb3956b40638fc0613cbf9_p_71\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 id=\"MQYCi\" data-lake-id=\"bf99c2b4f981cd1de6d6a0d13c00528d_h2_3\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">缓存实际中的使用场景</h2><p data-lake-id=\"200b796b4b1f5a36aa12caae6b6fa3d8_p_72\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"77e176ad977092b3bdb8fc34c965f7e0_p_73\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">由于现在基本上没折腾过这些，所以我也木知啊。</p><p data-lake-id=\"2d9700696680fa7e8e9ba9ca340628a0_p_74\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">感觉这个说的还不错，可以参考参考。</p><p data-lake-id=\"f683d7c5c5e63467da63aa8762c8b170_p_75\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><a target=\"_blank\" href=\"https://www.zhihu.com/question/20790576\">大公司里怎样开发和部署前端代码？</a></p><p data-lake-id=\"391eee0f96cca26f6e7df243706d21bf_p_76\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"9fc1a1e32cf7c324fef5888bc3009382_p_77\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 id=\"91Zil\" data-lake-id=\"053ff7e2484912664b7a6682abcb28e7_h2_4\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">参考</h2><ol start=\"1\" data-lake-id=\"524911a4ff8860148eed0da5621dbcb6_ol_0\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"7e27f5962c3f52e80c9acf2d49607885_li_0\"><a target=\"_blank\" href=\"https://www.cnblogs.com/leftJS/p/11082777.html\">200（强缓存）和304（协商缓存）的区别</a></li><li data-lake-id=\"4a7356147c7e5218a186cbb27933b7e6_li_1\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers\" target=\"_blank\">MDN headers相关章节</a></li></ol><p data-lake-id=\"f585fed1cef9af7641b65ac1c4919258_p_78\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p></div>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\"><br /></p><p data-lake-id=\"9e56165f09cb787a30aab0898bb35768_p_1\">缓存，首先肯定是在第一次访问之后的事。</p><p data-lake-id=\"2b2b3e7dc122d1502f582c0c8b7958d8_p_2\"><br /></p><p data-lake-id=\"f37fe8e0480d31c74d40da5952af2aaa_p_3\">第一次访问网页，要显示完整的网页需要加载很多 诸如css/js/html/图片等资源文件。每一个文件都需要经过你的电脑然后各种各样的中间服务器到达最后的资源服务器，不用说也知道这是需要花费一定时间的，加上资源文件这么多，所以第一次打开网页，你需要等一段时间才能看到完整的网页。</p><p data-lake-id=\"00b6539a5208e9e1d2a075b1c6eabc05_p_4\">相比之下，第二次访问就会好很多，这正是由于浏览器做了缓存的缘故，浏览器把所有的资源都缓存下来了，当你再次请求的时候，就不会再去资源服务器上下载了，而是直接从你本地的缓存里拿，那当然快很多了。</p><p data-lake-id=\"7467903a77e4c43e92d4f196903d0bbe_p_5\"><br /></p><p data-lake-id=\"6e44bf9e929b3a24f491ee4f06e545f2_p_6\">从实际上来说，这些资源文件，比如图片，在很长一段时间内，都不会变动，应该都是同一个文件。如果每次请求都重新下载一次。不仅增加服务器压力（网页中这些资源文件请求频率是很高的），还浪费用户流量。</p><p data-lake-id=\"ebd46c3420e347ee239c15b983e1d60e_p_7\">但这些资源文件，毕竟不是永远不变的，一旦发生改变，就应该马上使用新的，这样用户才能看到最新的。所以我们需要某种机制来确认，当前缓存的资源是否与服务器的资源是一致的。</p><p data-lake-id=\"92c8228235b93f7cc9ced6ac90fca3a6_p_8\"><br /></p><p data-lake-id=\"eadc4ec477465f1f239730d987d394b1_p_9\"><br /></p><p data-lake-id=\"c2f34bc2394f6c1cbb10e3ef5bf5f2b4_p_10\">言归正传。上面一大堆我只是想说，缓存真的是很有必要的。</p><p data-lake-id=\"828bea0262f636b25c97fbef525aed20_p_11\"><br /></p><p data-lake-id=\"6f6771fad68d0217299f6dae9ae6f679_p_12\">缓存，是靠http头部字段，来控制的。一般分了强缓存和协商缓存。涉及到的字段有：</p><p data-lake-id=\"2369fafe89fae403079018df6f36b51b_p_13\"><br /></p><card type=\"block\" name=\"table\" value=\"data:%7B%22rows%22%3A2%2C%22cols%22%3A3%2C%22html%22%3A%22%3Ctable%20class%3D%5C%22lake-table%5C%22%20style%3D%5C%22width%3A%20720px%3B%5C%22%3E%3Ccolgroup%3E%3Ccol%20width%3D%5C%22240%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3Ccol%20width%3D%5C%22240%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3Ccol%20width%3D%5C%22240%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3C%2Fcolgroup%3E%3Ctbody%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%3E%3Cp%3E%E5%BC%BA%E7%BC%93%E5%AD%98%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E%3Ca%20href%3D%5C%22https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FHTTP%2FHeaders%2FExpires%5C%22%20target%3D%5C%22_blank%5C%22%3E%3Cstrong%3EExpires%3C%2Fstrong%3E%3C%2Fa%3E%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E%3Ca%20href%3D%5C%22https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FHTTP%2FHeaders%2FCache-Control%5C%22%20target%3D%5C%22_blank%5C%22%3E%3Cstrong%3ECache-Control%3C%2Fstrong%3E%3C%2Fa%3E%3C%2Fp%3E%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%3E%3Cp%3E%E5%8D%8F%E5%95%86%E7%BC%93%E5%AD%98%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E%3Ca%20href%3D%5C%22https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FHTTP%2FHeaders%2FLast-Modified%5C%22%20target%3D%5C%22_blank%5C%22%3E%3Cstrong%3E%3Cspan%3ELast-modified%2FIf-Modified-Since%3C%2Fspan%3E%3C%2Fstrong%3E%3C%2Fa%3E%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E%3Ca%20href%3D%5C%22https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FHTTP%2FHeaders%2FETag%5C%22%20target%3D%5C%22_blank%5C%22%3E%3Cstrong%3EEtag%2FIf-None-Match%3C%2Fstrong%3E%3C%2Fa%3E%3C%2Fp%3E%3Cp%3E%3Cstrong%3E%3Cbr%20%2F%3E%3C%2Fstrong%3E%3C%2Fp%3E%3C%2Ftd%3E%3C%2Ftr%3E%3C%2Ftbody%3E%3C%2Ftable%3E%22%2C%22id%22%3A%22JV63z%22%7D\"></card><p data-lake-id=\"7cf79ceeaaf91ef14264b4c55c1c8c1d_p_14\"><br /></p><h2 id=\"Ao96G\" data-lake-id=\"90e96949d45a6079c82f7fa099b54e0e_h2_0\">强缓存</h2><p data-lake-id=\"c53070088aadb43ef468f61fca8ca22a_p_15\"><br /></p><p data-lake-id=\"83ac857d8c09d4991a2aea3568b98691_p_16\">强缓存最大的特点是：如果缓存判定没有过期，则<span style=\"color: #F5222D;\">不会请求服务器</span>，直接从缓存拿数据。</p><p data-lake-id=\"c5eaf555cee01ec836fc749258c6179d_p_17\"><br /></p><h3 id=\"tOPUe\" data-lake-id=\"c616b25a868555cb7a22fd2629483392_h3_0\"><span style=\"color: #000000;\"><span>Expires</span></span></h3><p data-lake-id=\"3f8949dd5527f0c9624c3fd3faefb76f_p_18\"><span style=\"color: #000000;\"><span><br /></span></span></p><p data-lake-id=\"5b9e820fb8295fbe21de30d7bef33f8d_p_19\"><span style=\"color: #000000;\"><span>和单词字面意思一样，过期时间。后面跟的是一个时间字符串，过了这个时间，代表缓存过期了。需要走下面的步骤（协商缓存，或者重新获取资源）。但有明显的问题，客户端和服务器时间存在不一致，导致判定过期或者不过期。</span></span></p><p data-lake-id=\"db841a6e995b001085603629a3ace379_p_20\"><span style=\"color: #000000;\"><span><br /></span></span></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22http%22%2C%22code%22%3A%22Expires%3A%20Wed%2C%2021%20Oct%202015%2007%3A28%3A00%20GMT%22%2C%22id%22%3A%22WX71R%22%7D\"></card><p data-lake-id=\"54d418504a63791b75a5f497078fa24a_p_21\"><br /></p><h3 id=\"AkwiO\" data-lake-id=\"ea77ac515d61789452b843d48cf672eb_h3_1\">Cache-Control</h3><p data-lake-id=\"37928cd1f32681ee4810a9ab9d3c1104_p_22\"><br /></p><p data-lake-id=\"cf11976076bcd232112f411a80f6c2f7_p_23\">首先第一点，cache-control的优先级比expires高；</p><p data-lake-id=\"9d5b566e1d35e7e5ddf7e77231b93a7c_p_24\">然后和expires不同，这个后面可以跟多个指令。常见的有代表，</p><p data-lake-id=\"3afe72986fc83f6913935faccbcf69b2_p_25\"><br /></p><p data-lake-id=\"4c18de864d8feec493e5b1837e857fcc_p_26\">是否可缓存？ public，private，no-cache，nostore</p><p data-lake-id=\"4cc44302cfe9be1836a49b383f7e914f_p_27\"><br /></p><card type=\"block\" name=\"table\" value=\"data:%7B%22rows%22%3A5%2C%22cols%22%3A2%2C%22html%22%3A%22%3Ctable%20class%3D%5C%22lake-table%5C%22%20style%3D%5C%22width%3A%20480px%3B%5C%22%3E%3Ccolgroup%3E%3Ccol%20width%3D%5C%22240%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3Ccol%20width%3D%5C%22240%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3C%2Fcolgroup%3E%3Ctbody%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%3E%3Cp%3E%E6%8C%87%E4%BB%A4%E5%90%8D%E5%AD%97%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E%E6%84%8F%E4%B9%89%3C%2Fp%3E%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%3E%3Cp%3E%3Cspan%3Epublic%3C%2Fspan%3E%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E%E5%8F%AF%E4%BB%A5%E8%A2%AB%E4%BB%BB%E6%84%8F%E5%AF%B9%E8%B1%A1%E7%BC%93%E5%AD%98%EF%BC%8C%E5%8C%85%E6%8B%AC%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8%3C%2Fp%3E%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%3E%3Cp%3E%3Cspan%3Eprivate%3C%2Fspan%3E%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E%E5%8F%AA%E8%83%BD%E8%A2%AB%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%BC%93%E5%AD%98%EF%BC%8C%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B9%8B%E7%B1%BB%E7%9A%84%E4%B8%8D%E8%83%BD%E7%BC%93%E5%AD%98%E3%80%82%3C%2Fp%3E%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20background-color%3A%20%23FFFFFF%3B%20color%3A%20%23262626%3B%5C%22%3E%3Cp%3E%3Cspan%3Eno-cache%3C%2Fspan%3E%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20background-color%3A%20%23FFFFFF%3B%20color%3A%20%23262626%3B%5C%22%3E%3Cp%3E%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%BD%BF%E7%94%A8%E7%BC%93%E5%AD%98%E4%B9%8B%E5%89%8D%EF%BC%8C%E5%BF%85%E9%A1%BB%E6%8A%8A%E8%AF%B7%E6%B1%82%E5%8F%91%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%8C%E8%BF%9B%E8%A1%8C%E9%AA%8C%E8%AF%81%E3%80%82%EF%BC%88%E8%B5%B0%E5%8D%8F%E5%95%86%E7%BC%93%E5%AD%98%3F%EF%BC%89%3C%2Fp%3E%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20background-color%3A%20%23FFFFFF%3B%20color%3A%20%23262626%3B%5C%22%3E%3Cp%3E%3Cspan%3Eno-store%3C%2Fspan%3E%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20background-color%3A%20%23FFFFFF%3B%20color%3A%20%23262626%3B%5C%22%3E%3Cp%3E%E4%B8%8D%E5%85%81%E8%AE%B8%E4%BB%BB%E4%BD%95%E5%AF%B9%E8%B1%A1%E5%AF%B9%E8%AF%B7%E6%B1%82%E6%88%96%E8%80%85%E5%93%8D%E5%BA%94%E8%BF%9B%E8%A1%8C%E7%BC%93%E5%AD%98%E3%80%82%3C%2Fp%3E%3C%2Ftd%3E%3C%2Ftr%3E%3C%2Ftbody%3E%3C%2Ftable%3E%22%2C%22id%22%3A%22c6HEK%22%7D\"></card><p data-lake-id=\"d17d837b16c49a0e5c21edc18722e410_p_28\"><br /></p><p data-lake-id=\"d88e4a12a4ed44f8657a361c35a3a870_p_29\">到期时间的相关。max-age最常用。其它请参考MDN。</p><p data-lake-id=\"5fd458287805671513520d6e641d42d4_p_30\"><strong>max-age=&lt;seconds&gt;</strong></p><p data-lake-id=\"d41c873c84a6a727b3cac57e9790cf94_p_31\">max-age后面跟秒数，代表客户端拿到这个请求，多少秒后会过期。这个就避免了expires的客户端服务器时间不一致的问题了。</p><p data-lake-id=\"bb3e20f1faeaf6bf9497bffd7f381295_p_32\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22http%22%2C%22code%22%3A%22Cache-Control%3A%20no-store%2F%2F%E5%85%B3%E9%97%AD%E7%BC%93%E5%AD%98%5CnCache-Control%3Apublic%2C%20max-age%3D31536000%2F%2F%E5%AF%B9%E4%BA%8E%E9%95%BF%E4%B9%85%E4%B8%8D%E5%8F%98%E7%9A%84%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%EF%BC%8C%E7%BC%93%E5%AD%98%E6%97%B6%E9%97%B4%E5%BE%88%E9%95%BF%E3%80%82%5Cn%5CnCache-Control%3A%20no-cache%2F%2F%E5%BC%BA%E5%88%B6%E5%AF%B9%E7%BC%93%E5%AD%98%E8%BF%9B%E8%A1%8C%E6%9C%89%E6%95%88%E6%80%A7%E6%A3%80%E9%AA%8C%EF%BC%88%E5%8D%8F%E5%95%86%E7%BC%93%E5%AD%98%EF%BC%9F%EF%BC%89%5CnCache-Control%3A%20max-age%3D0%2F%2F%E4%BB%A3%E8%A1%A8%E6%94%B6%E5%88%B0%E8%AF%B7%E6%B1%82%E8%B5%84%E6%BA%90%E5%B0%B1%E5%B7%B2%E8%BF%87%E6%9C%9F%EF%BC%8C%E9%9C%80%E8%A6%81%E9%AA%8C%E8%AF%81%E7%BC%93%E5%AD%98%E6%9C%89%E6%95%88%E6%80%A7%EF%BC%88%E5%8D%8F%E5%95%86%E7%BC%93%E5%AD%98%EF%BC%9F%EF%BC%89%E3%80%82%22%2C%22id%22%3A%22nvlGm%22%7D\"></card><p data-lake-id=\"73b74e66f7d869f94eb34b57d63eae3f_p_33\"><br /></p><h2 id=\"Ph6sg\" data-lake-id=\"d6e157313d3edef77d278e72864659c1_h2_1\">协商缓存</h2><p data-lake-id=\"39abba9494ef6da94608fbd0e487aa60_p_34\"><br /></p><p data-lake-id=\"b2b6e3a20468c26978009ef0324b5995_p_35\">当强缓存判断过期了，或者cache-control设置为no-cache时，需要去验证资源是否有效。这时候就走协商缓存了。</p><p data-lake-id=\"6f8f966688575a1f666bafa122494f73_p_36\"><br /></p><p data-lake-id=\"2439e96121b9d5fbf947554cfeb04750_p_37\">协商缓存，会像服务器发请求，然后服务器判断资源是否还有效，有效就返回304状态码，带上最新的头信息。没有body内容。如果无效，就正常返回新的资源内容。</p><p data-lake-id=\"82f45866a429f6224b2e92c65bfda254_p_38\"><br /></p><p data-lake-id=\"c6165af92210d0987bf3c7a054c97331_p_39\">协商缓存如其名，需要客户端和服务器协商。协商是靠<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/ETag\" target=\"_blank\">Etag</a>和<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Last-Modified\" target=\"_blank\">Last-modified</a>来进行的。</p><p data-lake-id=\"17b412f9fc3ec51ada5f566f0d09108c_p_40\"><br /></p><h3 id=\"K5qfl\" data-lake-id=\"4fe29d5a3b6762026a5540141875324a_h3_2\">Last-modified/If-Modified-Since</h3><p data-lake-id=\"d9d31f80b21bee6005ee4bb0be1d9a6b_p_41\"><br /></p><p data-lake-id=\"b00e8f732627f270cecdf6a515e3a205_p_42\">指令后面跟的值都是GMT的标准时间字符串。</p><p data-lake-id=\"4930f2b57b08d977b4a7a79433f23490_p_43\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22http%22%2C%22code%22%3A%22%2F%2F%E5%87%BA%E7%8E%B0%E5%9C%A8%E5%93%8D%E5%BA%94%E5%A4%B4%E4%B8%AD%5CnLast-Modified%3A%20Wed%2C%2021%20Oct%202015%2007%3A28%3A00%20GMT%20%5Cn%5Cn%2F%2F%E5%87%BA%E7%8E%B0%E5%9C%A8%E8%AF%B7%E6%B1%82%E5%A4%B4%E4%B8%AD%5CnIf-Modified-Since%3A%20Wed%2C%2021%20Oct%202015%2007%3A28%3A00%20GMT%22%2C%22id%22%3A%22Cwu6u%22%7D\"></card><p data-lake-id=\"157b805d005afe38c7c2d5198b31ee6e_p_44\"><br /></p><p data-lake-id=\"5db676cda3beb3ff1d3a2851aa78f72b_p_45\">其中last-modified是响应头字段，即客户端像服务器请求某个资源，服务器响应回来的头字段里会包含该字段。<span style=\"color: #333333;\">标记此文件在服务期端最后被修改的时间</span></p><p data-lake-id=\"fbd61c94f3a6d54dfc7518c0d1e90a54_p_46\">然后if-modified-since是请求头字段，即需要验证资源有效的时候，像服务器发送的请求会带这个字段，值为响应头的last-modified的值。</p><p data-lake-id=\"478231c71c811ff5f728eef1ada97581_p_47\"><br /></p><p data-lake-id=\"77b953137b68f0b50907c2f2a473ad91_p_48\">这样一来一去，服务器收到验证请求的时候，拿这个if-modified-since的值去对比资源修改的时间，如果资源在那之后有过修改，就返回新的资源，否则就返回304状态码。浏览器则继续使用当前缓存。</p><p data-lake-id=\"233f53790c0b9d757f931748dd4d9e1e_p_49\"><br /></p><p data-lake-id=\"22e9a5e0d83bc1ccd5d16babea30aa42_p_50\">该指令只能精确到秒。所有有了后面精确度更高的Etag的出现。</p><p data-lake-id=\"d3ff43f9faa22377838e1e2c0834a861_p_51\"><br /></p><h3 id=\"F3ukX\" data-lake-id=\"de83fc44e5b24d65eaae1dd1b3abfe8e_h3_3\">Etag/If-None-Match</h3><p data-lake-id=\"bc2359f7bb1e32241fa27f528e60a125_p_52\"><br /></p><p data-lake-id=\"d47eeb435ac3ccf58f3c7eb7d4fcac8c_p_53\">etag原理和last-modified差不多。但etag优先级更高。</p><p data-lake-id=\"a597f88600c34bdfa4e7a80426a30587_p_54\">但etag的值一般使用文件内容或者文件最后修改日期的hash值。代表该资源的唯一标识符，一旦文件改变，该标识就会改变。</p><p data-lake-id=\"7188e3d4590c731c34019643bbb3ba96_p_55\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22http%22%2C%22code%22%3A%22%2F%2F%E5%87%BA%E7%8E%B0%E5%9C%A8%E5%93%8D%E5%BA%94%E5%A4%B4%E4%B8%AD%5CnETag%3A%20%5C%2233a64df551425fcc55e4d42a148795d9f25f89d4%5Cn%2F%2F%E5%87%BA%E7%8E%B0%E5%9C%A8%E8%AF%B7%E6%B1%82%E5%A4%B4%E4%B8%AD%5CnIf-Match%3A%20%5C%2233a64df551425fcc55e4d42a148795d9f25f89d4%5C%22%22%2C%22id%22%3A%22Udelb%22%7D\"></card><p data-lake-id=\"a6e7204180aba568d27cc7b95d0717fd_p_56\"><br /></p><p data-lake-id=\"66484370daf0f556711d6bf0e0492af5_p_57\">其中ETag是响应头字段，即客户端像服务器请求某个资源，服务器响应回来的头字段里会包含该字段。<span style=\"color: #333333;\">代表此文件的唯一标识。</span></p><p data-lake-id=\"5b98820f2b99867120b65c65b306037f_p_58\">然后if-none-match是请求头字段，即需要验证资源有效的时候，像服务器发送的请求会带这个字段，值为响应头的<span>ETag</span>的值。t</p><p data-lake-id=\"1b325e2e939e9ae8679222558eaaceb6_p_59\"><br /></p><p data-lake-id=\"6c305a5438cffdc97e16f9a4bcde3238_p_60\">这样一来一去，服务器收到验证请求的时候，拿这个<span>if-none-match</span>的值去对比服务器上文件的etag值，如果不一致，就返回新的资源，否则就返回304状态码。浏览器则继续使用当前缓存。</p><p data-lake-id=\"d89d8c6a729313c0d25f9b1742c0d590_p_61\"><br /></p><p data-lake-id=\"9b034733f43578c770243b15c945bc07_p_62\"><br /></p><h2 id=\"bbvAy\" data-lake-id=\"e672f0cd3c3a0567663818da0f10922f_h2_2\">缓存的流程</h2><p data-lake-id=\"87e34965e50e2c8e31ce44a85667e8dd_p_63\"><br /></p><p data-lake-id=\"8f4760e916ba660eda084321f6a27c48_p_64\">还是看图片比较清楚，虽然我是偷的。下面的图来自<a target=\"_blank\" href=\"https://www.cnblogs.com/leftJS/p/11082777.html\">链接</a></p><p data-lake-id=\"2a81d6eed31dfd1dc3c193bbdb75c1a1_p_65\"><br /></p><h3 id=\"y9taF\" data-lake-id=\"f2184e1e1c32a675a2a0e5007864f454_h3_4\">第一次请求资源的时候</h3><p data-lake-id=\"0ec862102656d92d4a7e822007c68786_p_66\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F284138%2F1582640123545-d65336fa-0135-44b8-842a-951a205159b2.png%22%2C%22originWidth%22%3A411%2C%22originHeight%22%3A369%2C%22size%22%3A0%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22margin%22%3A%7B%22top%22%3Afalse%2C%22bottom%22%3Afalse%7D%2C%22width%22%3A411%2C%22height%22%3A369%7D\"></card></p><p data-lake-id=\"152302cc03cd3433e252fd8fbe4bade7_p_67\"><br /></p><p data-lake-id=\"f67c084ec5a7dd840c4c56ee24cc368e_p_68\"><br /></p><h3 id=\"gooAU\" data-lake-id=\"49823dcd81511eec73adf7eb9e9d1a81_h3_5\">后续请求资源的时候</h3><p data-lake-id=\"956e0d4312e941b77cd57ec35c294aff_p_69\"><br /></p><p data-lake-id=\"d3c2ce4cc534ea43d446be0c42d5c011_p_70\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F284138%2F1582640112044-a2da9ec8-099d-4169-b929-e15b2d5de851.png%22%2C%22originWidth%22%3A554%2C%22originHeight%22%3A528%2C%22size%22%3A0%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22margin%22%3A%7B%22top%22%3Afalse%2C%22bottom%22%3Afalse%7D%2C%22width%22%3A554%2C%22height%22%3A528%7D\"></card></p><p data-lake-id=\"b7f5c253c3fb3956b40638fc0613cbf9_p_71\"><br /></p><h2 id=\"MQYCi\" data-lake-id=\"bf99c2b4f981cd1de6d6a0d13c00528d_h2_3\">缓存实际中的使用场景</h2><p data-lake-id=\"200b796b4b1f5a36aa12caae6b6fa3d8_p_72\"><br /></p><p data-lake-id=\"77e176ad977092b3bdb8fc34c965f7e0_p_73\">由于现在基本上没折腾过这些，所以我也木知啊。</p><p data-lake-id=\"2d9700696680fa7e8e9ba9ca340628a0_p_74\">感觉这个说的还不错，可以参考参考。</p><p data-lake-id=\"f683d7c5c5e63467da63aa8762c8b170_p_75\"><a target=\"_blank\" href=\"https://www.zhihu.com/question/20790576\">大公司里怎样开发和部署前端代码？</a></p><p data-lake-id=\"391eee0f96cca26f6e7df243706d21bf_p_76\"><br /></p><p data-lake-id=\"9fc1a1e32cf7c324fef5888bc3009382_p_77\"><br /></p><h2 id=\"91Zil\" data-lake-id=\"053ff7e2484912664b7a6682abcb28e7_h2_4\">参考</h2><ol start=\"1\" data-lake-id=\"524911a4ff8860148eed0da5621dbcb6_ol_0\"><li data-lake-id=\"7e27f5962c3f52e80c9acf2d49607885_li_0\"><a target=\"_blank\" href=\"https://www.cnblogs.com/leftJS/p/11082777.html\">200（强缓存）和304（协商缓存）的区别</a></li><li data-lake-id=\"4a7356147c7e5218a186cbb27933b7e6_li_1\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers\" target=\"_blank\">MDN headers相关章节</a></li></ol><p data-lake-id=\"f585fed1cef9af7641b65ac1c4919258_p_78\"><br /></p>",
  "body_draft_lake": "",
  "public": 1,
  "status": 1,
  "view_status": 0,
  "read_status": 1,
  "likes_count": 0,
  "comments_count": 0,
  "content_updated_at": "2020-09-07T06:34:30.000Z",
  "deleted_at": null,
  "created_at": "2020-02-18T08:26:05.000Z",
  "updated_at": "2020-09-07T06:34:30.000Z",
  "published_at": "2020-09-07T06:34:30.000Z",
  "first_published_at": "2020-02-26T01:03:23.000Z",
  "word_count": 1783,
  "cover": "https://cdn.nlark.com/yuque/0/2020/png/284138/1582640123545-d65336fa-0135-44b8-842a-951a205159b2.png",
  "description": "缓存，首先肯定是在第一次访问之后的事。第一次访问网页，要显示完整的网页需要加载很多 诸如css/js/html/图片等资源文件。每一个文件都需要经过你的电脑然后各种各样的中间服务器到达最后的资源服务器，不用说也知道这是需要花费一定时间的，加上资源文件这么多，所以第一次打开网页，你需要等一段时间...",
  "custom_description": null,
  "hits": 39,
  "_serializer": "v2.doc_detail"
}