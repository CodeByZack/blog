{
  "id": 1362896,
  "slug": "ipkgxl",
  "title": "VUE之自定义指令（Vue.directive）",
  "book_id": 231593,
  "book": {
    "id": 231593,
    "type": "Book",
    "slug": "web",
    "name": "WEB",
    "user_id": 284138,
    "description": "前端知识点记录",
    "creator_id": 284138,
    "public": 1,
    "items_count": 58,
    "likes_count": 0,
    "watches_count": 3,
    "content_updated_at": "2023-02-02T09:09:21.426Z",
    "updated_at": "2023-02-02T09:09:21.000Z",
    "created_at": "2019-03-07T05:05:08.000Z",
    "namespace": "zackdk/web",
    "user": {
      "id": 284138,
      "type": "User",
      "login": "zackdk",
      "name": "行一度空山",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1551934932702-d412771d-8d33-4694-9186-a749a3b4e05b.jpeg",
      "books_count": 2,
      "public_books_count": 1,
      "followers_count": 5,
      "following_count": 0,
      "created_at": "2019-03-07T05:02:38.000Z",
      "updated_at": "2023-02-01T12:18:25.000Z",
      "_serializer": "v2.user"
    },
    "_serializer": "v2.book"
  },
  "user_id": 284138,
  "creator": {
    "id": 284138,
    "type": "User",
    "login": "zackdk",
    "name": "行一度空山",
    "description": null,
    "avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1551934932702-d412771d-8d33-4694-9186-a749a3b4e05b.jpeg",
    "books_count": 2,
    "public_books_count": 1,
    "followers_count": 5,
    "following_count": 0,
    "created_at": "2019-03-07T05:02:38.000Z",
    "updated_at": "2023-02-01T12:18:25.000Z",
    "_serializer": "v2.user"
  },
  "format": "lake",
  "body": "vue有许多内部指令，比如v-on,v-bind,v-model。<br />当内部指令不能满足我们时，我们也可以定义一些属于自己的指令。\n<a name=\"39e43c78\"></a>\n### 如何定义\n\n```\n// 注册一个全局自定义指令 `v-empty`\nVue.directive('empty', {\n    bind:function(){//被绑定\n         console.log('1 - bind');\n    },\n    inserted:function(){//绑定到节点\n          console.log('2 - inserted');\n    },\n    update:function(){//组件更新\n          console.log('3 - update');\n    },\n    componentUpdated:function(){//组件更新完成\n          console.log('4 - componentUpdated');\n    },\n    unbind:function(){//解绑\n          console.log('1 - bind');\n    }\n});\n\n//有时候可能想在 bind 和 update 时触发相同行为，而不关心其它的钩子。可以进行简写。\n\nVue.directive('empty', function (el, binding) {\n  console.log(\"---简写---\");\n})\n```\n\n<a name=\"416cabe3\"></a>\n### 钩子函数的参数\n\n- `el`：指令所绑定的元素，可以用来直接操作 DOM 。\n- `binding`：一个对象，包含以下属性：\n   - `name`：指令名，不包括 v- 前缀。\n   - `value`：指令的绑定值，例如：v-my-directive=\"1 + 1\" 中，绑定值为 2。\n   - `oldValue`：指令绑定的前一个值，仅在 update 和 componentUpdated 钩子中可用。无论值是否改变都可用。\n   - `expression`：字符串形式的指令表达式。例如 v-my-directive=\"1 + 1\" 中，表达式为 \"1 + 1\"。\n   - `arg`：传给指令的参数，可选。例如 v-my-directive:foo 中，参数为 \"foo\"。\n   - `modifiers`：一个包含修饰符的对象。例如：v-my-directive.foo.bar 中，修饰符对象为 { foo: true, bar: true }。\n- `vnode`：Vue 编译生成的虚拟节点。移步 VNode API 来了解更多详情。\n- `oldVnode`：上一个虚拟节点，仅在 update 和 componentUpdated 钩子中可用。\n\n<a name=\"481feccf\"></a>\n### 如何使用\n\n<a name=\"85a33544\"></a>\n#### 常见使用场景一\n\n在图片未完成加载前，用随机的背景色占位，图片加载完成后才直接渲染出来。\n\n\n\n```\nVue.directive('img', function (el, binding) {\n  let color = Math.floor(Math.random()*1000000);\n  el.style.backgroundColor = \"#\"+color;\n  let img = new Image();\n  img.src = binding.value;\n  img.onload = function(){\n      el.style.backgroundImage = \"url(\"+binding.value+\")\";   \n  }\n})\n\n<div v-img=\"url\" id=\"demo\">\n            \n</div>\n```\n\n<a name=\"489f921b\"></a>\n#### 常见使用场景二\n\n常见的 tip 提示弹框的功能，鼠标移入元素，可以在元素的上下左右显示 tip，鼠标移出则隐藏 tip。\n\n\n\n```\n//简单演示，正式使用，请自行完善。\nVue.directive('tip', function (el, binding) {\n  let span = document.createElement(\"span\");\n  span.style.position = \"absolute\";\n  span.innerHTML = binding.value;\n  span.style.backgroundColor = \"#333333\";\n  span.style.borderRadius = \"5px\"; \n  span.style.color = \"#fff\"; \n  span.style.padding = \"10px\";\n  el.onmouseover = function(){\n  \tel.style.position = \"relative\";\n        el.appendChild(span);\n        span.style.right = -span.clientWidth+\"px\";\n  \tspan.style.top = (el.clientHeight/2-span.clientHeight/2)+\"px\";\n  }\n  el.onmouseout = function(){\n    el.removeChild(span);\n  }\n})\n\n<div v-img=\"url\" v-tip=\"tip\" id=\"demo\">\n            \n</div>\n```\n\n",
  "body_draft": "",
  "body_html": "<!doctype html><p>vue有许多内部指令，比如v-on,v-bind,v-model。</p><p>当内部指令不能满足我们时，我们也可以定义一些属于自己的指令。</p><h3 id=\"39e43c78\">如何定义</h3><p><br /></p><pre><code>// 注册一个全局自定义指令 `v-empty`\nVue.directive('empty', {\n    bind:function(){//被绑定\n         console.log('1 - bind');\n    },\n    inserted:function(){//绑定到节点\n          console.log('2 - inserted');\n    },\n    update:function(){//组件更新\n          console.log('3 - update');\n    },\n    componentUpdated:function(){//组件更新完成\n          console.log('4 - componentUpdated');\n    },\n    unbind:function(){//解绑\n          console.log('1 - bind');\n    }\n});\n\n//有时候可能想在 bind 和 update 时触发相同行为，而不关心其它的钩子。可以进行简写。\n\nVue.directive('empty', function (el, binding) {\n  console.log(&quot;---简写---&quot;);\n})</code></pre><p><br /></p><h3 id=\"416cabe3\">钩子函数的参数</h3><p><br /></p><ul><li><code>el</code>：指令所绑定的元素，可以用来直接操作 DOM 。</li></ul><ul><li><code>binding</code>：一个对象，包含以下属性：</li></ul><ul data-lake-indent=\"1\"><li><code>name</code>：指令名，不包括 v- 前缀。</li></ul><ul data-lake-indent=\"1\"><li><code>value</code>：指令的绑定值，例如：v-my-directive=&quot;1 + 1&quot; 中，绑定值为 2。</li></ul><ul data-lake-indent=\"1\"><li><code>oldValue</code>：指令绑定的前一个值，仅在 update 和 componentUpdated 钩子中可用。无论值是否改变都可用。</li></ul><ul data-lake-indent=\"1\"><li><code>expression</code>：字符串形式的指令表达式。例如 v-my-directive=&quot;1 + 1&quot; 中，表达式为 &quot;1 + 1&quot;。</li></ul><ul data-lake-indent=\"1\"><li><code>arg</code>：传给指令的参数，可选。例如 v-my-directive:foo 中，参数为 &quot;foo&quot;。</li></ul><ul data-lake-indent=\"1\"><li><code>modifiers</code>：一个包含修饰符的对象。例如：v-my-directive.foo.bar 中，修饰符对象为 { foo: true, bar: true }。</li></ul><ul><li><code>vnode</code>：Vue 编译生成的虚拟节点。移步 VNode API 来了解更多详情。</li></ul><ul><li><code>oldVnode</code>：上一个虚拟节点，仅在 update 和 componentUpdated 钩子中可用。</li></ul><p><br /></p><h3 id=\"481feccf\">如何使用</h3><p><br /></p><h4 id=\"85a33544\">常见使用场景一</h4><p><br /></p><p>在图片未完成加载前，用随机的背景色占位，图片加载完成后才直接渲染出来。</p><p><br /></p><p></p><p><br /></p><pre><code>Vue.directive('img', function (el, binding) {\n  let color = Math.floor(Math.random()*1000000);\n  el.style.backgroundColor = &quot;#&quot;+color;\n  let img = new Image();\n  img.src = binding.value;\n  img.onload = function(){\n      el.style.backgroundImage = &quot;url(&quot;+binding.value+&quot;)&quot;;   \n  }\n})\n\n&lt;div v-img=&quot;url&quot; id=&quot;demo&quot;&gt;\n            \n&lt;/div&gt;</code></pre><p><br /></p><h4 id=\"489f921b\">常见使用场景二</h4><p><br /></p><p>常见的 tip 提示弹框的功能，鼠标移入元素，可以在元素的上下左右显示 tip，鼠标移出则隐藏 tip。</p><p><br /></p><p></p><p><br /></p><pre><code>//简单演示，正式使用，请自行完善。\nVue.directive('tip', function (el, binding) {\n  let span = document.createElement(&quot;span&quot;);\n  span.style.position = &quot;absolute&quot;;\n  span.innerHTML = binding.value;\n  span.style.backgroundColor = &quot;#333333&quot;;\n  span.style.borderRadius = &quot;5px&quot;; \n  span.style.color = &quot;#fff&quot;; \n  span.style.padding = &quot;10px&quot;;\n  el.onmouseover = function(){\n  \tel.style.position = &quot;relative&quot;;\n        el.appendChild(span);\n        span.style.right = -span.clientWidth+&quot;px&quot;;\n  \tspan.style.top = (el.clientHeight/2-span.clientHeight/2)+&quot;px&quot;;\n  }\n  el.onmouseout = function(){\n    el.removeChild(span);\n  }\n})\n\n&lt;div v-img=&quot;url&quot; v-tip=&quot;tip&quot; id=&quot;demo&quot;&gt;\n            \n&lt;/div&gt;</code></pre><p><br /></p>",
  "body_lake": "<!doctype lake><p>vue有许多内部指令，比如v-on,v-bind,v-model。</p><p>当内部指令不能满足我们时，我们也可以定义一些属于自己的指令。</p><h3 id=\"39e43c78\">如何定义</h3><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22code%22%3A%22%2F%2F%20%E6%B3%A8%E5%86%8C%E4%B8%80%E4%B8%AA%E5%85%A8%E5%B1%80%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4%20%60v-empty%60%5CnVue.directive('empty'%2C%20%7B%5Cn%20%20%20%20bind%3Afunction()%7B%2F%2F%E8%A2%AB%E7%BB%91%E5%AE%9A%5Cn%20%20%20%20%20%20%20%20%20console.log('1%20-%20bind')%3B%5Cn%20%20%20%20%7D%2C%5Cn%20%20%20%20inserted%3Afunction()%7B%2F%2F%E7%BB%91%E5%AE%9A%E5%88%B0%E8%8A%82%E7%82%B9%5Cn%20%20%20%20%20%20%20%20%20%20console.log('2%20-%20inserted')%3B%5Cn%20%20%20%20%7D%2C%5Cn%20%20%20%20update%3Afunction()%7B%2F%2F%E7%BB%84%E4%BB%B6%E6%9B%B4%E6%96%B0%5Cn%20%20%20%20%20%20%20%20%20%20console.log('3%20-%20update')%3B%5Cn%20%20%20%20%7D%2C%5Cn%20%20%20%20componentUpdated%3Afunction()%7B%2F%2F%E7%BB%84%E4%BB%B6%E6%9B%B4%E6%96%B0%E5%AE%8C%E6%88%90%5Cn%20%20%20%20%20%20%20%20%20%20console.log('4%20-%20componentUpdated')%3B%5Cn%20%20%20%20%7D%2C%5Cn%20%20%20%20unbind%3Afunction()%7B%2F%2F%E8%A7%A3%E7%BB%91%5Cn%20%20%20%20%20%20%20%20%20%20console.log('1%20-%20bind')%3B%5Cn%20%20%20%20%7D%5Cn%7D)%3B%5Cn%5Cn%2F%2F%E6%9C%89%E6%97%B6%E5%80%99%E5%8F%AF%E8%83%BD%E6%83%B3%E5%9C%A8%20bind%20%E5%92%8C%20update%20%E6%97%B6%E8%A7%A6%E5%8F%91%E7%9B%B8%E5%90%8C%E8%A1%8C%E4%B8%BA%EF%BC%8C%E8%80%8C%E4%B8%8D%E5%85%B3%E5%BF%83%E5%85%B6%E5%AE%83%E7%9A%84%E9%92%A9%E5%AD%90%E3%80%82%E5%8F%AF%E4%BB%A5%E8%BF%9B%E8%A1%8C%E7%AE%80%E5%86%99%E3%80%82%5Cn%5CnVue.directive('empty'%2C%20function%20(el%2C%20binding)%20%7B%5Cn%20%20console.log(%5C%22---%E7%AE%80%E5%86%99---%5C%22)%3B%5Cn%7D)%22%7D\"></card><p><br /></p><h3 id=\"416cabe3\">钩子函数的参数</h3><p><br /></p><ul><li><code>el</code>：指令所绑定的元素，可以用来直接操作 DOM 。</li></ul><ul><li><code>binding</code>：一个对象，包含以下属性：</li></ul><ul data-lake-indent=\"1\"><li><code>name</code>：指令名，不包括 v- 前缀。</li></ul><ul data-lake-indent=\"1\"><li><code>value</code>：指令的绑定值，例如：v-my-directive=&quot;1 + 1&quot; 中，绑定值为 2。</li></ul><ul data-lake-indent=\"1\"><li><code>oldValue</code>：指令绑定的前<cursor />一个值，仅在 update 和 componentUpdated 钩子中可用。无论值是否改变都可用。</li></ul><ul data-lake-indent=\"1\"><li><code>expression</code>：字符串形式的指令表达式。例如 v-my-directive=&quot;1 + 1&quot; 中，表达式为 &quot;1 + 1&quot;。</li></ul><ul data-lake-indent=\"1\"><li><code>arg</code>：传给指令的参数，可选。例如 v-my-directive:foo 中，参数为 &quot;foo&quot;。</li></ul><ul data-lake-indent=\"1\"><li><code>modifiers</code>：一个包含修饰符的对象。例如：v-my-directive.foo.bar 中，修饰符对象为 { foo: true, bar: true }。</li></ul><ul><li><code>vnode</code>：Vue 编译生成的虚拟节点。移步 VNode API 来了解更多详情。</li></ul><ul><li><code>oldVnode</code>：上一个虚拟节点，仅在 update 和 componentUpdated 钩子中可用。</li></ul><p><br /></p><h3 id=\"481feccf\">如何使用</h3><p><br /></p><h4 id=\"85a33544\">常见使用场景一</h4><p><br /></p><p>在图片未完成加载前，用随机的背景色占位，图片加载完成后才直接渲染出来。</p><p><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22%22%2C%22alt%22%3A%22alt%22%2C%22status%22%3A%22error%22%2C%22percent%22%3A0%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22display%22%3A%22inline%22%2C%22message%22%3A%22%E5%9B%BE%E7%89%87%E4%B8%8D%E6%94%AF%E6%8C%81%E6%8B%B7%E8%B4%9D%E5%A4%8D%E5%88%B6%EF%BC%8C%E8%AF%B7%E5%8D%95%E7%8B%AC%E5%A4%8D%E5%88%B6%E4%B8%8A%E4%BC%A0%22%2C%22size%22%3A0%7D\"></card></p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22code%22%3A%22Vue.directive('img'%2C%20function%20(el%2C%20binding)%20%7B%5Cn%20%20let%20color%20%3D%20Math.floor(Math.random()*1000000)%3B%5Cn%20%20el.style.backgroundColor%20%3D%20%5C%22%23%5C%22%2Bcolor%3B%5Cn%20%20let%20img%20%3D%20new%20Image()%3B%5Cn%20%20img.src%20%3D%20binding.value%3B%5Cn%20%20img.onload%20%3D%20function()%7B%5Cn%20%20%20%20%20%20el.style.backgroundImage%20%3D%20%5C%22url(%5C%22%2Bbinding.value%2B%5C%22)%5C%22%3B%20%20%20%5Cn%20%20%7D%5Cn%7D)%5Cn%5Cn%3Cdiv%20v-img%3D%5C%22url%5C%22%20id%3D%5C%22demo%5C%22%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%5Cn%3C%2Fdiv%3E%22%7D\"></card><p><br /></p><h4 id=\"489f921b\">常见使用场景二</h4><p><br /></p><p>常见的 tip 提示弹框的功能，鼠标移入元素，可以在元素的上下左右显示 tip，鼠标移出则隐藏 tip。</p><p><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22%22%2C%22alt%22%3A%22alt%22%2C%22status%22%3A%22error%22%2C%22percent%22%3A0%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22display%22%3A%22inline%22%2C%22message%22%3A%22%E5%9B%BE%E7%89%87%E4%B8%8D%E6%94%AF%E6%8C%81%E6%8B%B7%E8%B4%9D%E5%A4%8D%E5%88%B6%EF%BC%8C%E8%AF%B7%E5%8D%95%E7%8B%AC%E5%A4%8D%E5%88%B6%E4%B8%8A%E4%BC%A0%22%2C%22size%22%3A0%7D\"></card></p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22code%22%3A%22%2F%2F%E7%AE%80%E5%8D%95%E6%BC%94%E7%A4%BA%EF%BC%8C%E6%AD%A3%E5%BC%8F%E4%BD%BF%E7%94%A8%EF%BC%8C%E8%AF%B7%E8%87%AA%E8%A1%8C%E5%AE%8C%E5%96%84%E3%80%82%5CnVue.directive('tip'%2C%20function%20(el%2C%20binding)%20%7B%5Cn%20%20let%20span%20%3D%20document.createElement(%5C%22span%5C%22)%3B%5Cn%20%20span.style.position%20%3D%20%5C%22absolute%5C%22%3B%5Cn%20%20span.innerHTML%20%3D%20binding.value%3B%5Cn%20%20span.style.backgroundColor%20%3D%20%5C%22%23333333%5C%22%3B%5Cn%20%20span.style.borderRadius%20%3D%20%5C%225px%5C%22%3B%20%5Cn%20%20span.style.color%20%3D%20%5C%22%23fff%5C%22%3B%20%5Cn%20%20span.style.padding%20%3D%20%5C%2210px%5C%22%3B%5Cn%20%20el.onmouseover%20%3D%20function()%7B%5Cn%20%20%5Ctel.style.position%20%3D%20%5C%22relative%5C%22%3B%5Cn%20%20%20%20%20%20%20%20el.appendChild(span)%3B%5Cn%20%20%20%20%20%20%20%20span.style.right%20%3D%20-span.clientWidth%2B%5C%22px%5C%22%3B%5Cn%20%20%5Ctspan.style.top%20%3D%20(el.clientHeight%2F2-span.clientHeight%2F2)%2B%5C%22px%5C%22%3B%5Cn%20%20%7D%5Cn%20%20el.onmouseout%20%3D%20function()%7B%5Cn%20%20%20%20el.removeChild(span)%3B%5Cn%20%20%7D%5Cn%7D)%5Cn%5Cn%3Cdiv%20v-img%3D%5C%22url%5C%22%20v-tip%3D%5C%22tip%5C%22%20id%3D%5C%22demo%5C%22%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%5Cn%3C%2Fdiv%3E%22%7D\"></card><p><br /></p>",
  "body_draft_lake": "",
  "public": 1,
  "status": 1,
  "view_status": 0,
  "read_status": 1,
  "likes_count": 0,
  "comments_count": 0,
  "content_updated_at": "2019-03-13T03:04:00.000Z",
  "deleted_at": null,
  "created_at": "2019-03-13T03:02:01.000Z",
  "updated_at": "2023-02-02T09:07:58.000Z",
  "published_at": "2019-03-13T03:04:00.000Z",
  "first_published_at": "2019-03-13T03:04:00.000Z",
  "word_count": 661,
  "cover": null,
  "description": "vue有许多内部指令，比如v-on,v-bind,v-model。当内部指令不能满足我们时，我们也可以定义一些属于自己的指令。如何定义// 注册一个全局自定义指令 `v-empty` Vue.directive('empty', {     bind:function(){//被绑定     ...",
  "custom_description": null,
  "hits": 39,
  "_serializer": "v2.doc_detail"
}